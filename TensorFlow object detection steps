TensorFlow object detection with custom objects
Steps：
        1.install tensorflow and python
        2.collect enough images as dataset for training
        3.pre-process data using preview images-tools-adjust size/color, rotate.. based on requirement
        4.annotate object in the image--using a powerful graphical annotation tool called labellmg which generates an XML file 
        5.convert the obtained XML file into CSV then into TFRecord file since TensorFlow expects training data as TFRecord             file
        6.train a Tensorflow model, using pre-trained model and re-config so that it can be trained to detect our custom                 objects, tools in our case      
        7.Clone the Tensorflow model repository and navigate to the research/object_detection folder and then execute the               below commands in this path.
        #python train.py --logtostderr 
        --train_dir=（training/）//replace（）by your own created trainging file root
        --pipeline_config_path=（training/ssd_mobilenet_v1_pets.config）//replace () by the route of config file#
        8.after a long time for training the model
        9.all training files will be stored in the training folder
        10.finally, execute the below command in same path which will generate the model file(.bp) in the specified output              folder. You should also use the latest “Trained Checkpoint Prefix” filename which is of the format — model.ckpt-XX in          the below command.
                python export_inference_graph.py \
                 — input_type image_tensor \
                 — pipeline_config_path training/ssd_mobilenet_v1_pets.config \
                 — trained_checkpoint_prefix training/model.ckpt-XX\
                 — output_directory “graphfoldername”
